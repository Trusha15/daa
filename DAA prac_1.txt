LA-1 )Write a program non-recursive and recursive program to calculate Fibonacci numbers and analyze their time and space complexity.

1-Recursive Approach-[ Space Complexity- O(n) & Time Complexity- O(2^n)]
C++-
#include <bits/stdc++.h>
using namespace std;
 
int fib(int n)
{
    if (n <= 1)
        return n;
    return fib(n - 1) + fib(n - 2);   
}
int main()
{
    int n,i;
    cout<<"enter n:";
    cin>>n;
    for(i=1;i<=n;i++)
    cout << fib(i);
    getchar();
    return 0;
}
 2-Non-Recursive Approach:- -[ Space Complexity- O(1) & Time Complexity- O(n)]
#include <iostream>  
using namespace std;  
int main() {  
int n1= 0 , n2=1 ,n3, number;    
cout<<"Enter the number of elements: ";    
cin>>number;    
cout<<n1<<" "<<n2<<" ";  
for(int i=2;i<number;++i)  //loop starts from 2 because 0 and 1 are already printed    
 {    
           n3=n1+n2;    
           cout<<n3<<" ";    
n1=n2;    
n2=n3;    
 }    
   return 0;  }


